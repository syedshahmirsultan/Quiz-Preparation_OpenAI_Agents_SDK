[project]
name = "agenticai"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
authors = [
    { name = "syedshahmirsultan", email = "syedshahmirsultan@gmail.com" }
]
requires-python = ">=3.13"
dependencies = []

[project.scripts]
test = "agenticai:main"
agent = "agenticai.agents:main"
agent1 = "agenticai.agent1:main"
agent2 = "agenticai.agent2:history_run"
agent3 = "agenticai.agent3:main"
agent4 = "agenticai.agent4:main"
agent5 = "agenticai.agent5:main"
agent6 = "agenticai.agent6:main"
agent7 = "agenticai.agent7:main"
run_main = "agenticai.run:run_main"
to_input_list = "agenticai.to_input_list:main"
run_streamed = "agenticai.run_streamed:run_main"
run_item_stream = "agenticai.run_item_stream:run_main"
structured_response = "agenticai.structured_output:main"
demo_loop = "agenticai.run_demo_loop:run_main"
function_as_tool = "agenticai.function_as_tool:main"
function_as_tool_run = "agenticai.function_as_tool:main_run"
agents_as_tools = "agenticai.agents_as_tools:main"
context = "agenticai.context:main"
clonning = "agenticai.agent_clonning:main"
max_turns = "agenticai.max_turns:main"
run_streamed2 = "agenticai.run_streamed2:run"
full_agent = "agenticai.full_agent:main"
handoff = "agenticai.handoff:main"
guardrails = "agenticai.guardrails:run"
complete_agent = "agenticai.complete_agent:run"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
